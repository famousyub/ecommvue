import { PropType } from 'vue';
import { Embed, Create } from 'powerbi-client';
import { IReportCreateConfiguration } from 'powerbi-models';
import { EventHandler } from '../utils/utils';
declare const _default: import("vue").DefineComponent<{
    embedConfig: {
        type: PropType<IReportCreateConfiguration>;
        required: true;
    };
    eventHandlers: {
        type: PropType<Map<string, EventHandler>>;
    };
}, unknown, unknown, {
    config(): IReportCreateConfiguration;
}, {
    /**
     * Create the report
     *
     * @returns void
     */
    createEmbedReport(): void;
    callSetEventHandlers(): void;
    getCreateObj(): Create;
}, import("vue").DefineComponent<{
    cssClassName: {
        type: StringConstructor;
    };
    service: {
        type: typeof import("service").Service;
    };
}, unknown, {
    powerbi: import("service").Service;
    prevEventHandlerMap: Map<string, EventHandler>;
    embed: Embed;
}, {}, {
    setEventHandlers(embed: Embed, eventHandlerMap: Map<string, EventHandler>): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    cssClassName: {
        type: StringConstructor;
    };
    service: {
        type: typeof import("service").Service;
    };
}>>, {}, {}>, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    embedConfig: {
        type: PropType<IReportCreateConfiguration>;
        required: true;
    };
    eventHandlers: {
        type: PropType<Map<string, EventHandler>>;
    };
}>>, {}, {}>;
export default _default;
